apiVersion: batch/v1
kind: Job
metadata:
  name: setup-metabase
spec:
  parallelism: 1    
  completions: 1    
  template:         
    metadata:
      name: setup-metabase
    spec:
      volumes:
      - name: setup-metabase-scripts-volume
        configMap:
          name: setup-metabase-scripts
      containers:
      - name: setup-metabase-job
        image: alpine
        volumeMounts:
          - mountPath: /setup-metabase-scripts
            name: setup-metabase-scripts-volume
        env:
          - name: HOME
            value: /tmp
        command:
        - /bin/sh
        - -c
        - |
          echo "Instalando curl..."
          apk update
          apk upgrade
          apk add curl
          echo "Script de SETUP em /setup-metabase-scripts"
          ls -lh /setup-metabase-scripts
          echo "copiando scripts para /tmp"
          cp /setup-metabase-scripts/*.sh /tmp
          echo "apply 'chmod +x' to /tmp/*.sh"
          chmod +x /tmp/*.sh
          echo "Executando script-setup-metabase.sh"
          /tmp/script-setup-metabase.sh
      restartPolicy: Never
---
apiVersion: v1
items:
- apiVersion: v1
  data:
    script-setup-metabase.sh: |
      echo "script-setup-metabase.sh"
      # Loop para garantir execução do SETUP somente quando container do Metabase estiver online.
      until curl -X GET -H "Content-Type: application/json" http://metabase:3000/api/session/properties  | grep 'token'; do
          echo "[AGUARDANDO METABASE]"
          sleep 50
      done 
      
      
      echo "[API/REST METABASE DISPONIVEL]"
      
      # Realiza chamada para obter o token de setup.
      token_setup=$(curl -X GET -H "Content-Type: application/json" http://metabase:3000/api/session/properties | grep -Po '"setup-token": *\K"[^"]*"')
      echo $token_setup
      
      # Variavel com corpo de requisição para criar o usuário de administrador.
      body_json='{"token": '$token_setup',"prefs":{"site_name":"airton","site_locale":"pt","allow_tracking":"true"},"database":"null","user":{"first_name":"Airton","last_name":"Airton","email":"airton.junior@gmail.com.br","password":"12345678","site_name":"Airton"}}'
      echo $body_json
      
      # Realiza requisição da criação do usuário de administrador.
      curl -g -X POST -H "Content-Type: application/json" -d '{"token": '$token_setup',"prefs":{"site_name":"airton","site_locale":"pt","allow_tracking":"true"},"database":"null","user":{"first_name":"Airton","last_name":"Airton","email":"airton.junior@gmail.com.br","password":"12345678","site_name":"Airton"}}' http://metabase:3000/api/setup  | grep -Po '"id": *\K"[^"]*"' 
      
      # Obtem token da sessão atual.
      token_session=$(curl -X POST -H "Content-Type: application/json" -d '{"username":"airton.junior@gmail.com.br","password":"12345678"}'  http://metabase:3000/api/session | grep -Po '"id": *\K"[^"]*"' )
                
      echo 'token - session: '$token_session
      
      # Realiza cadastro do banco de dados com base no token de sessão do usuário de administrador.
      curl -g -X POST -H "Content-Type: application/json"  -H 'Cookie: metabase.SESSION='$token_session'' -d '{"engine":"sqlserver","name":"myservidor","details":{"host":"0.0.0.0","port":1433,"db":"mydatabase","instance":"Gabriela","user":"vnext","password":"0utra$enha","ssl":false,"additional-options":null,"tunnel-enabled":false},"auto_run_queries":true,"is_full_sync":true,"schedules":{}}' http://metabase:3000/api/database

  kind: ConfigMap
  metadata:
    creationTimestamp: null
    name:  setup-metabase-scripts
kind: List
metadata: {}